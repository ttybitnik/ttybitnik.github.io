<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>computing on Eterno Devir</title><link>https://eternodevir.com/tags/computing/</link><description>Recent content in computing on Eterno Devir</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>vinicius.moraes@eternodevir.com (Vinicius Moraes)</managingEditor><webMaster>vinicius.moraes@eternodevir.com (Vinicius Moraes)</webMaster><copyright>CC BY-SA 4.0</copyright><lastBuildDate>Tue, 11 Jul 2023 08:01:06 -0300</lastBuildDate><atom:link href="https://eternodevir.com/tags/computing/index.xml" rel="self" type="application/rss+xml"/><item><title>A saner keyboard</title><link>https://eternodevir.com/blog/a-saner-keyboard/</link><pubDate>Tue, 11 Jul 2023 08:01:06 -0300</pubDate><author>Vinicius Moraes</author><guid>https://eternodevir.com/blog/a-saner-keyboard/</guid><description>I think keyboards are fascinating devices, from design, technological, and linguistic perspectives. After all, a keyboard encompasses the tasks of (i) communicating in written language, (ii) operating and controlling the machine, and (iii) programming in computer language.
Shortly after starting to use GNU Emacs, I found myself thinking extensively about the position of the keys on my keyboard. After researching a bit, the first information I found was about the different layouts, particularly qwerty and dvorak.</description><content:encoded><![CDATA[<p>
I think keyboards are fascinating devices, from design, technological, and linguistic perspectives. After all, a keyboard encompasses the tasks of (i) communicating in written language, (ii) operating and controlling the machine, and (iii) programming in computer language.</p>
<p>
Shortly after starting to use GNU Emacs, I found myself thinking extensively about the position of the keys on my keyboard. After researching a bit, the first information I found was about the different layouts, particularly <code class="verbatim">qwerty</code> and <code class="verbatim">dvorak</code>.</p>
<p>
<figure><img src="/images/blog/2023/image01.jpg"
         alt="Qwerty Layout"/><figcaption>
            <p>Qwerty Layout</p>
        </figcaption>
</figure>
</p>
<p>
<figure><img src="/images/blog/2023/image02.jpg"
         alt="Dvorak Layout"/><figcaption>
            <p>Dvorak Layout</p>
        </figcaption>
</figure>
</p>
<p>
At first, <code class="verbatim">dvorak</code>&#39;s proposal to distribute the keys according to letter frequency seemed sound to me. However, in a context of writing in different languages, the frequency and positions would have to change for each language. For that reason alone, I ended up deciding to stick with <code class="verbatim">qwerty</code> for now.</p>
<p>
Although the linguistic layout had an impact, I was more concerned with the position of the operational keys. For example, to me, it did not make sense for <kbd>CAPS</kbd> to be an easier-key-to-press than <kbd>ESC</kbd>. While reading the book <code class="verbatim">Mastering Emacs</code>,  I ended up discovering that the keyboards, at the time of GNU Emacs creation, were completely different in terms of modifiers.</p>
<blockquote>
<p>A much older joke is that Emacs stands for “Escape Meta Alt Control Shift.” (…) Back then, most Emacs keys were bound to a larger range of physical keyboard modifiers but when the keyboard maker (and the business that made the machines the keyboards were plugged into) went bust, Emacs had to change with the times. Instead of undoing the cornerstone of Emacs, the developers shuffled the keys around and made them work on normal, boring PC keyboards.</p>
<p>
— Mickey Petersen, in Mastering Emacs (2015)</p>
</blockquote>
<p>
When I saw the photo of a Space Cadet used on the first Lisp machines, many traditional GNU bindings started to make even more sense, beyond their mnemonic aspect. For example, the fact that the current <kbd>Alt</kbd> key is called <kbd>M</kbd> (Meta).</p>
<figure>
  <img src="/images/blog/2023/image03.jpg" alt="Space Cadet">
  <figcaption>
    <p>Space Cadet used with the LM-2<sup class="footnote-reference"><a id="footnote-reference-1" href="#footnote-1">1</a></sup></p>
  </figcaption>
</figure>
<p>
Until this moment I was using the formidable <a href="https://github.com/kmonad/kmonad">KMonad</a> to swap the position of <kbd>CAPS</kbd> and <kbd>ESC</kbd>. I also spent some time customizing different layers to have a little more comfort even on a traditional keyboard design. One of KMonad&#39;s most powerful features is the ability to assign different commands to the same key based on the press type. For instance, I programmed my <kbd>SPC</kbd> key to act like <kbd>s</kbd> (Super) when pressed for more than 500ms without affecting its default functionality.</p>
<div class="src src-text">
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="ln"> 1</span><span class="cl">  #| --------------------------------------------------------------------
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">                     KMonad: BR abnt-2 100% template
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">  -------------------------------------------------------------------- |#
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">  (defsrc
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">    esc f1 f2 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12 ssrq slck pause
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">    grv 1 2 3 4 5 6 7 8 9 0 - = bspc ins home pgup nlck kp/ kp* kp-
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">    tab q w e r t y u i o p [ [ ret del end pgdn kp7 kp8 kp9 kp+
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">    caps a s d f g h j k l ; &#39; ] kp4 kp5 kp6
</span></span><span class="line"><span class="ln">10</span><span class="cl">    lsft 102d z x c v b n m , . ; / rsft up kp1 kp2 kp3 kprt
</span></span><span class="line"><span class="ln">11</span><span class="cl">    lctl lmet lalt spc ralt cmp rctl left down rght kp0 kp.
</span></span><span class="line"><span class="ln">12</span><span class="cl">  )
</span></span><span class="line"><span class="ln">13</span><span class="cl">
</span></span><span class="line"><span class="ln">14</span><span class="cl">  (deflayer base
</span></span><span class="line"><span class="ln">15</span><span class="cl">    caps f1 f2 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12 ssrq slck pause
</span></span><span class="line"><span class="ln">16</span><span class="cl">    grv 1 2 3 4 5 6 7 8 9 0 - = bspc ins home pgup nlck kp/ kp* kp-
</span></span><span class="line"><span class="ln">17</span><span class="cl">    tab q w e r t y u i o p [ [ ret del end pgdn kp7 kp8 kp9 kp+
</span></span><span class="line"><span class="ln">18</span><span class="cl">    @ces a s d f g h j k l ; &#39; ] kp4 kp5 kp6
</span></span><span class="line"><span class="ln">19</span><span class="cl">    lsft 102d z x c v b n m , . ; / rsft up kp1 kp2 kp3 kprt
</span></span><span class="line"><span class="ln">20</span><span class="cl">    lctl lmet lalt @dwm ralt @swt rctl left down rght kp0 kp.
</span></span><span class="line"><span class="ln">21</span><span class="cl">  )
</span></span><span class="line"><span class="ln">22</span><span class="cl">
</span></span><span class="line"><span class="ln">23</span><span class="cl">  (deflayer xfk
</span></span><span class="line"><span class="ln">24</span><span class="cl">    esc f1 f2 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12 ssrq slck pause
</span></span><span class="line"><span class="ln">25</span><span class="cl">    grv 1 2 3 4 del 6 7 8 9 0 - = bspc ins home pgup nlck kp/ kp* kp-
</span></span><span class="line"><span class="ln">26</span><span class="cl">    tab q w @db @df t y @bw up @fw p [ [ ret del end pgdn kp7 kp8 kp9 kp+
</span></span><span class="line"><span class="ln">27</span><span class="cl">    caps a ret bspc f g home left down rght end &#39; ] kp4 kp5 kp6
</span></span><span class="line"><span class="ln">28</span><span class="cl">    lsft 102d z x c v b n m , . ; / rsft up kp1 kp2 kp3 kprt
</span></span><span class="line"><span class="ln">29</span><span class="cl">    lctl lmet lalt spc ralt @swt rctl left down rght kp0 kp.
</span></span><span class="line"><span class="ln">30</span><span class="cl">  )
</span></span><span class="line"><span class="ln">31</span><span class="cl">
</span></span><span class="line"><span class="ln">32</span><span class="cl">  (deflayer switch
</span></span><span class="line"><span class="ln">33</span><span class="cl">    _ @s1 @s2 _ _ _ _ _ _ _ _ _ _ _ _ _
</span></span><span class="line"><span class="ln">34</span><span class="cl">    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
</span></span><span class="line"><span class="ln">35</span><span class="cl">    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
</span></span><span class="line"><span class="ln">36</span><span class="cl">    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
</span></span><span class="line"><span class="ln">37</span><span class="cl">    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
</span></span><span class="line"><span class="ln">38</span><span class="cl">    _ _ _ _ _ @swt _ _ _ _ _ _
</span></span><span class="line"><span class="ln">39</span><span class="cl">
</span></span><span class="line"><span class="ln">40</span><span class="cl">  )
</span></span><span class="line"><span class="ln">41</span><span class="cl">
</span></span><span class="line"><span class="ln">42</span><span class="cl">
</span></span><span class="line"><span class="ln">43</span><span class="cl">  (defalias
</span></span><span class="line"><span class="ln">44</span><span class="cl">    dwm (tap-hold 500 spc lmet)
</span></span><span class="line"><span class="ln">45</span><span class="cl">    swt (layer-toggle switch)
</span></span><span class="line"><span class="ln">46</span><span class="cl">    ces (tap-hold 500 esc lctl)
</span></span><span class="line"><span class="ln">47</span><span class="cl">    s1 (layer-switch base)
</span></span><span class="line"><span class="ln">48</span><span class="cl">    s2 (layer-switch xfk)
</span></span><span class="line"><span class="ln">49</span><span class="cl">
</span></span><span class="line"><span class="ln">50</span><span class="cl">    bw (around ctl left)
</span></span><span class="line"><span class="ln">51</span><span class="cl">    fw (around ctl right)
</span></span><span class="line"><span class="ln">52</span><span class="cl">    db (around ctl bspc)
</span></span><span class="line"><span class="ln">53</span><span class="cl">    df (around ctl del)
</span></span><span class="line"><span class="ln">54</span><span class="cl">  )</span></span></code></pre></div>
</div>
<p>
However, even after customizing my entire keyboard using KMonad, I was still bothered by the physical position of the keys. Furthermore, the idea of ​​running a separate program to modify them did not appeal to me that much either. It was then that I discovered the X-Bows keyboard.</p>
<p>
<figure><img src="/images/blog/2023/image00.jpg"
         alt="X-Bows"/><figcaption>
            <p>X-Bows</p>
        </figcaption>
</figure>
</p>
<p>
The X-Bows has alternative keys for the thumb position, which was previously used primarily to press <kbd>SPC</kbd>. With these new keys, I can control the <kbd>C</kbd>, <kbd>M</kbd> and <kbd>S</kbd> modifiers only with that finger. I also have <kbd>DEL</kbd> and <kbd>RET</kbd> within easy reach. In short, the keyboard relieves combinations from the weakest finger, the little finger, to stronger fingers near the keyboard&#39;s center. That, along with the spacing and angulation, represents huge gains in comfort and performance.</p>
<p>
Aside from the ergonomic benefits, the ability to use thumb modifiers is also a boon when using GNU Emacs. Additionally, I found adapting to the keyboard to be quicker than expected. I will write more about that in an upcoming post on <code class="verbatim">touch typing</code>.</p>
<p>
In advance, I have been using the X-Bows for just over 3 months now. The only disadvantage I have noticed so far is that I have become so used to its design that it feels odd typing on other keyboards, especially on laptops. I have become somewhat dependent on it, which is not necessarily a bad thing. Ideally, it would be great to have laptops with the thumb cluster design one day. Or rather, if this design became a widespread standard.</p>
<p>
Until then, the most viable option has been carrying the X-Bows with me whenever necessary.</p>
<div class="footnotes">
  <hr class="footnotes-separatator">
  <div class="footnote-definitions">
    <div class="footnote-definition">
      <sup id="footnote-1"><a href="#footnote-reference-1">1</a></sup>
      <div class="footnote-body">
        <p>Retro-Computing Society of Rhode Island, via <a href="https://en.wikipedia.org/wiki/Space-cadet_keyboard#/media/File:Space-cadet.jpg">Wikimedia Commons</a></p>
      </div>
    </div>
  </div>
</div>
]]></content:encoded></item><item><title>Homelab</title><link>https://eternodevir.com/projects/homelab/</link><pubDate>Thu, 02 Mar 2023 22:07:49 -0300</pubDate><author>Vinicius Moraes</author><guid>https://eternodevir.com/projects/homelab/</guid><description>Area: self-hosting Date: 2022-current
This project is a custom home server that involves a wide range of areas, including virtualization, containerization, network security, system administration, and infrastructure as code. By integrating technologies such as Ansible and Podman, I have been continuously testing and deploying a variety of tools and services, enabling me to create an optimized system for my specific needs.
System
QEMU/KVM Ansible Debian, RHEL Docker, Podman Network</description><content:encoded><![CDATA[<p>
<strong>Area</strong>: self-hosting <br>
<strong>Date</strong>: 2022-current</p>
<p>
This project is a custom home server that involves a wide range of areas, including virtualization, containerization, network security, system administration, and infrastructure as code. By integrating technologies such as Ansible and Podman, I have been continuously testing and deploying a variety of tools and services, enabling me to create an optimized system for my specific needs.</p>
<p>
<div class="double-list">
  <ul>
    <li>
      <p>System</p>
      <ul>
        <li>QEMU/KVM</li>
        <li>Ansible</li>
        <li>Debian, RHEL</li>
        <li>Docker, Podman</li>
      </ul>
      </li>
    <li>
        <p>Network</p>
        <ul>
          <li>Nginx Reverse Proxy</li>
          <li>Unbound DNS</li>
          <li>Pihole</li>
          <li>VPN</li>
          <li>SSH</li>
          <li>iptables</li>
        </ul>
    </li>
    </ul>
  <ul>
      <li>
        <p>Services</p>
        <ul>
          <li>Home Assistant</li>
          <li>Jellyfin</li>
          <li>Hugo</li>
          <li>Gotify</li>
        </ul>
      </li>
      <li>
        <p>Management</p>
        <ul>
          <li>Portainer</li>
          <li>Grafana</li>
          <li>Prometheus</li>
          <li>Node Exporter</li>
          <li>cAdvisor</li>
          <li>Watchtower</li>
        </ul>
      </li>
    </ul>
</div>
</p>
]]></content:encoded></item><item><title>How my GNU/Linux journey began</title><link>https://eternodevir.com/blog/how-my-gnu/linux-journey-began/</link><pubDate>Sat, 10 Dec 2022 08:44:01 -0300</pubDate><author>Vinicius Moraes</author><guid>https://eternodevir.com/blog/how-my-gnu/linux-journey-began/</guid><description>It all started with my first laptop, an old Samsung RV415, hostname Vertov. It had stopped working for basic tasks, and while most people would simply buy a newer laptop, I could not just dispose of Vertov. He had been with me through most of my undergraduate studies and made it possible to play the soundtracks at 1408. He was my companion on my first international trip, and we cooked countless recipes together.</description><content:encoded><![CDATA[
<p>
It all started with my first laptop, an old Samsung RV415, hostname Vertov. It had stopped working for basic tasks, and while most people would simply buy a newer laptop, I could not just dispose of Vertov. He had been with me through most of my undergraduate studies and made it possible to play the soundtracks at 1408. He was my companion on my first international trip, and we cooked countless recipes together. Vertov had too much history to be just another tragedy of planned obsolescence.</p>
<div id="outline-container-headline-1" class="outline-2">
<h2 id="headline-1">
Hardware revival
</h2>
<div id="outline-text-headline-1" class="outline-text-2">
<p>
The first idea that occurred to me was to make as many hardware improvements as possible. After an extensive research, I found some interesting components. I replaced the HHD with an SSD and doubled the amount of RAM with a new stick. However, opening the laptop completely to do a deep cleaning was somewhat challenging, and I had to struggle a bit with the plastic clips on the case. Nevertheless, everything went well, and I managed to change the thermal paste on the CPU as well. Even though I am used to doing this on my desktop computer, this adventure taught me a lot about the specifics of laptops.</p>
<p>
<figure><img src="/images/blog/2022/image00.jpg"
         alt="Vertov"/>
</figure>
</p>
<p>
In the midst of Vertov&#39;s revival procedure, I began to understand that the slowness he was experiencing was a much broader issue than it initially seemed. After all, why had he started to get slow? It might not necessarily be a hardware issue. Also, why was his processor soldered to the motherboard? This made any modification practically impossible. Even after the hardware improvements, Vertov still had some difficulty performing simultaneous tasks. It became evident to me that, in addition to the hardware, part of the slowness was due to the programs themselves, which were becoming increasingly heavier with features that were not even necessary for my use.</p>
</div>
</div>
<div id="outline-container-headline-2" class="outline-2">
<h2 id="headline-2">
GNU/Linux rediscovery
</h2>
<div id="outline-text-headline-2" class="outline-text-2">
<p>
Coincidentally, in a conversation during this same period, a friend ended up mentioning that he ran Debian on his main computer—he had recently bought a desktop computer with the same specifications as mine. This mention brought back memories from high school when I and another friend installed Slackware. At the time, we had no idea all that it represented. Ultimately, I convinced myself to install &#34;Linux&#34; on Vertov, hoping to continue using it. The first choice, as a remembrance, was Slackware.</p>
<p>
<figure><img src="/images/blog/2022/image01.jpg"
         alt="Slackware"/>
</figure>
</p>
<p>
After installing Slackware, Vertov gained a new lease of life, and I was able to learn and discover countless things. Windows had been weighing him down, as its requirements grew over time, demanding stronger components. Since Windows seemed to be the only existing operating system option, Vertov would have become obsolete. I soon realized that being restricted to this proprietary operating system would always force me to dispose of my hardware, even though I was satisfied with its features. At that point, I began an intense learning process about the FOSS movement, GNU/Linux, and its entire philosophy, which gave me the freedom to have a free operating system. This was the start of my journey from being a regular user to becoming an advanced one.</p>
</div>
</div>
<div id="outline-container-headline-3" class="outline-2">
<h2 id="headline-3">
Digital autonomy
</h2>
<div id="outline-text-headline-3" class="outline-text-2">
<p>
From that moment on, I began to actually control my computer and its programs and not the other way around. I started using Window Managers and even TTY as writing environments, which were noticeably lighter and free from distractions for my use. I discovered GNU Emacs and its incredible org-mode, which completely transformed the way I interact with computers and texts. I also started using RSS to organize and consume content instead of subjecting myself to arbitrary algorithms. Over time, I deepened my practical knowledge of UNIX/Linux, to the point where I started my own homelab. Now I was taking more than control over my hardware or software itself, I was starting to take control over my digital life as a whole.</p>
<p>
<div id="freedom-iframe-container" style="position: relative; padding-top: calc(60% + 100px); width: 100%;">
<iframe src="https://www.fsf.org/videos/escape-to-freedom/" scrolling="no" style="overflow: hidden; margin: 0; border: 0 none; display: block; position: absolute; width: 100%; height: 100%; top: 0;"></iframe>
</div>
<script>

window.onmessage = function (e) { if (e.data.hasOwnProperty("freedom-iframe-height")) { document.getElementById('freedom-iframe-container').style.height=`${e.data["freedom-iframe-height"]}px`;  document.getElementById('freedom-iframe-container').style["padding-top"]="unset";} };

</script>





</p>
<p>
All of this happened because, at a certain point, I refused to give up Vertov due to planned obsolescence. Not to mention the reuse of a perfectly functional equipment that would become e-waste. There is life beyond the <em>windows</em>.</p>
</div>
</div>
]]></content:encoded></item><item><title>AWS Cloud</title><link>https://eternodevir.com/projects/aws-cloud/</link><pubDate>Fri, 13 Jul 2018 22:07:49 -0300</pubDate><author>Vinicius Moraes</author><guid>https://eternodevir.com/projects/aws-cloud/</guid><description> Area: cloud‑hosting Date: 2018-2022
This project involved deploying dynamic websites on AWS, managing network, DNS, snapshots, and system updates on Ubuntu Server instances. To accomplish this, I employed a combination of AWS resources, such as Route 53 and Lightsail, along with remote and security tools. During its operation, I also handled other tasks including WordPress management, content creation, and website design and customization.
Ubuntu Server Route 53 Lightsail CloudWatch Bitnami Wordpress Multisite</description><content:encoded><![CDATA[<p>
<strong>Area</strong>: cloud‑hosting <br>
<strong>Date</strong>: 2018-2022</p>
<p>
This project involved deploying dynamic websites on AWS, managing network, DNS, snapshots, and system updates on Ubuntu Server instances. To accomplish this, I employed a combination of AWS resources, such as Route 53 and Lightsail, along with remote and security tools. During its operation, I also handled other tasks including WordPress management, content creation, and website design and customization.</p>
<ul>
<li>Ubuntu Server</li>
<li>Route 53</li>
<li>Lightsail</li>
<li>CloudWatch</li>
<li>Bitnami</li>
<li>Wordpress Multisite</li>
</ul>
]]></content:encoded></item></channel></rss>